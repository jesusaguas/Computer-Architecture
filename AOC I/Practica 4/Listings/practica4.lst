


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             codigo, CODE
    2 00000000                 EXPORT           ordena
    3 00000000         
    4 00000000         ordena
    5 00000000 E1A02000        mov              r2,r0       ;iz=T[0]
    6 00000004 E2413001        sub              r3,r1,#1    ;r3=N-1
    7 00000008 E0803103        add              r3,r0,r3,lsl#2 ;de=T[N-1]
    8 0000000C E52DE004        PUSH             {lr}        ;guardo direccion d
                                                            e retorno
    9 00000010 E92D000C        PUSH             {r2,r3}     ;parametros para qk
                                                            sort
   10 00000014 EB000001        bl               qksort
   11 00000018 E28DD008        add              sp,sp,#8    ;adios parametros
   12 0000001C E49DF004        POP              {pc}        ;vuelvo al main
   13 00000020         
   14 00000020         qksort
   15 00000020 E92D4800        PUSH             {fp,lr}
   16 00000024 E1A0B00D        mov              fp,sp       ;fp=sp
   17 00000028 E92D100F        PUSH             {r0-r3,r12} ;Guardo los registr
                                                            os a usar
   18 0000002C E59B0008        ldr              r0,[fp,#8]  ;i=iz
   19 00000030 E59B100C        ldr              r1,[fp,#12] ;j=de
   20 00000034 E0412000        sub              r2,r1,r0    ;de-iz
   21 00000038 E1A020A2        lsr              r2,r2,#1    ;(de-iz)/2
   22 0000003C E3C22002        bic              r2,r2,#0x2  ;fuerzo el alineami
                                                            ento
   23 00000040 E7902002        ldr              r2,[r0,r2]  ;x=T[(iz+de)/2]
   24 00000044         
   25 00000044 E590C000 
                       dow     ldr              r12,[r0]    ;utilizamos el scra
                                                            th register para al
                                                            macenar T[i]
   26 00000048 E15C0002        cmp              r12,r2
   27 0000004C AA000001        bge              buc         ;¿T[i]<x?
   28 00000050 E2800004        add              r0,r0,#4    ;i=i+1
   29 00000054 EAFFFFFA        b                dow
   30 00000058         
   31 00000058 E591C000 
                       buc     ldr              r12,[r1]    ;utilizamos el scra
                                                            th register para al
                                                            macenar T[j]
   32 0000005C E152000C        cmp              r2,r12
   33 00000060 AA000001        bge              iff         ;¿x<T[j]?
   34 00000064 E2411004        sub              r1,r1,#4    ;j=j-1
   35 00000068 EAFFFFFA        b                buc
   36 0000006C         
   37 0000006C E1500001 
                       iff     cmp              r0,r1
   38 00000070 CA000005        bgt              go          ;¿i<=j?
   39 00000074 E5903000        ldr              r3,[r0]     ;w=T[i]
   40 00000078 E591C000        ldr              r12,[r1]    ;utilizamos el scra
                                                            th register para al
                                                            macenar T[j]
   41 0000007C E580C000        str              r12,[r0]    ;T[i]=T[j]
   42 00000080 E5813000        str              r3,[r1]     ;T[j]=w
   43 00000084 E2800004        add              r0,r0,#4    ;i=i+1
   44 00000088 E2411004        sub              r1,r1,#4    ;j=j-1
   45 0000008C         
   46 0000008C E1500001 



ARM Macro Assembler    Page 2 


                       go      cmp              r0,r1
   47 00000090 CA000000        bgt              rec1        ;¿i<=j?
   48 00000094 EAFFFFEA        b                dow
   49 00000098         
   50 00000098         rec1
   51 00000098 E59B3008        ldr              r3,[fp,#8]  ;r3=iz
   52 0000009C E1530001        cmp              r3,r1
   53 000000A0 AA000005        bge              rec2        ;¿iz<j?
   54 000000A4 E52D0004        PUSH             {r0}        ;necesario preserva
                                                            rlo
   55 000000A8 E52D1004        PUSH             {r1}        ;pasamos los parame
                                                            tros (j)
   56 000000AC E52D3004        PUSH             {r3}        ;por la pila   (iz)
                                                            
   57 000000B0 EBFFFFDA        bl               qksort
   58 000000B4 E28DD008        add              sp,sp,#8    ;nos saltamos los p
                                                            arametros
   59 000000B8 E49D0004        POP              {r0}        ;lo recuperamos, lo
                                                             necesitamos para r
                                                            ec2
   60 000000BC         
   61 000000BC         rec2
   62 000000BC E59B300C        ldr              r3,[fp,#12] ;r3=de
   63 000000C0 E1500003        cmp              r0,r3
   64 000000C4 AA000002        bge              bye         ;¿i<de?
   65 000000C8 E92D0009        PUSH             {r0,r3}     ;pasamos parametros
                                                             por pila(r0=i,r3=d
                                                            e)
   66 000000CC EBFFFFD3        bl               qksort
   67 000000D0 E28DD008        add              sp,sp,#8    ;nos saltamos los p
                                                            arametros
   68 000000D4         
   69 000000D4         bye
   70 000000D4 E8BD100F        POP              {r0-r3,r12} ;Recupero los regis
                                                            tros utilizados
   71 000000D8 E8BD8800        POP              {fp,pc}     ;volvemos
   72 000000DC         
   73 000000DC                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\practica4.d -o.\objects\practica4.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_
v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 514" --list=.\listings\practica4.lst practic
a4.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

buc 00000058

Symbol: buc
   Definitions
      At line 31 in file practica4.s
   Uses
      At line 27 in file practica4.s
      At line 35 in file practica4.s

bye 000000D4

Symbol: bye
   Definitions
      At line 69 in file practica4.s
   Uses
      At line 64 in file practica4.s
Comment: bye used once
codigo 00000000

Symbol: codigo
   Definitions
      At line 1 in file practica4.s
   Uses
      None
Comment: codigo unused
dow 00000044

Symbol: dow
   Definitions
      At line 25 in file practica4.s
   Uses
      At line 29 in file practica4.s
      At line 48 in file practica4.s

go 0000008C

Symbol: go
   Definitions
      At line 46 in file practica4.s
   Uses
      At line 38 in file practica4.s
Comment: go used once
iff 0000006C

Symbol: iff
   Definitions
      At line 37 in file practica4.s
   Uses
      At line 33 in file practica4.s
Comment: iff used once
ordena 00000000

Symbol: ordena
   Definitions
      At line 4 in file practica4.s
   Uses
      At line 2 in file practica4.s
Comment: ordena used once
qksort 00000020



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: qksort
   Definitions
      At line 14 in file practica4.s
   Uses
      At line 10 in file practica4.s
      At line 57 in file practica4.s
      At line 66 in file practica4.s

rec1 00000098

Symbol: rec1
   Definitions
      At line 50 in file practica4.s
   Uses
      At line 47 in file practica4.s
Comment: rec1 used once
rec2 000000BC

Symbol: rec2
   Definitions
      At line 61 in file practica4.s
   Uses
      At line 53 in file practica4.s
Comment: rec2 used once
10 symbols
342 symbols in table
